//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

#import "{{ prefix }}{{ module_info.name }}Header.h"

#import "{{ prefix }}{{ module_info.name }}ViewController.h"
#import "{{ prefix }}{{ module_info.name }}Interactor.h"
#import "{{ prefix }}{{ module_info.name }}Presenter.h"
#import "{{ prefix }}{{ module_info.name }}PresenterIO.h"

@interface {{ prefix }}{{ module_info.name }}Header() <{{ prefix }}{{ module_info.name }}PresenterDelegate>

@property (weak, nonatomic) id <{{ prefix }}{{ module_info.name }}Delegate> root;

@property (strong, nonatomic) {{ prefix }}{{ module_info.name }}ViewController* controller;
@property (strong, nonatomic) {{ prefix }}{{ module_info.name }}Interactor* interactor;
@property (strong, nonatomic) {{ prefix }}{{ module_info.name }}Presenter* presenter;

@end


@implementation {{ prefix }}{{ module_info.name }}Header

- (id)initWithRoot:(id <{{ prefix }}{{ module_info.name }}Delegate>) root {
    self = [super init];
    if (self) {
        self.root = root;
        
        self.controller = [{{ prefix }}{{ module_info.name }}ViewController new];
        self.presenter = [{{ prefix }}{{ module_info.name }}Presenter new];
        self.interactor = [{{ prefix }}{{ module_info.name }}Interactor new];
        
        self.presenter.head = self;
        self.presenter.controller = self.controller;
        self.presenter.interactor = self.interactor;
        
        self.interactor.presenter = self.presenter;
        self.controller.presenter = self.presenter;
    }
    return self;
}

#pragma mark - {{ prefix }}{{ module_info.name }}Interface

- (void)showInViewController:(UIViewController*) viewController {

}

@end
